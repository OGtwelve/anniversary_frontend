nvm use 18

npm run build

// 打包后会有.next文件, 上传至服务器

# 进入你的前端项目根目录
cd D:\webstorm\anniversary_frontend

# 统一时间戳目录名
$TS = Get-Date -Format "yyyyMMddHHmmss"
$REL = "/srv/anniv-frontend/releases/anniv-$TS"

# 1) 服务器上建目标目录
ssh root@43.138.113.213 "mkdir -p $REL"

# 2) 一次性上传所有必须文件/目录（-r 递归）
scp -r ".next" "public" "package.json" "package-lock.json" "next.config.*" `
    root@43.138.113.213:$REL/

# 3) 切软链、装依赖、重启服务（服务器上执行）
ssh root@43.138.113.213 `
  "ln -sfn $REL /srv/anniv-frontend/current && chown -R app:app /srv/anniv-frontend && cd /srv/anniv-frontend/current && sudo -u app npm ci --omit=dev && sudo systemctl restart anniv-frontend && sudo systemctl status anniv-frontend --no-pager -l | sed -n '1,12p'"






// 部署腾讯云 usr/local/out文件夹








# 在你的前端项目根目录执行
npm ci
$env:NODE_ENV="production"
npm run build

$TS=(Get-Date -Format "yyyyMMddHHmmss")
$PKG="anniv-frontend-$TS.tgz"
# 仅打包运行所需的最小集
tar -czf $PKG `
  .next/standalone `
  .next/static `
  public `
  package.json `
  next.config.* `
  .env.production










# 以下为static部署需要

# 2) 构建（output: export 会直接产出 out/）
npm run build

# 3) 打包 out/ （纯静态）
$PKG="anniv-static-$(Get-Date -Format yyyyMMddHHmmss).tgz"
tar -czf $PKG out

# 4) 上传到服务器
scp $PKG zjlab@10.101.88.143:/tmp/

sudo bash -lc '
set -euo pipefail

APP_ROOT=/srv/anniv-frontend-static
mkdir -p "$APP_ROOT/releases"

# 取最新上传的静态包
PKG=$(ls -t /tmp/anniv-static-*.tgz | head -n1)
[ -n "$PKG" ] || { echo "未找到 /tmp/anniv-static-*.tgz"; exit 1; }

# 解包到新版本目录
REL="$APP_ROOT/releases/anniv-static-$(date +%Y%m%d%H%M%S)"
mkdir -p "$REL"
tar -xzf "$PKG" -C "$REL"

# out/ 就是静态根，切到 current
ln -sfn "$REL/out" "$APP_ROOT/current"

# 统一权限（你这台 nginx 进程用户是 www-data）
chown -R www-data:www-data "$APP_ROOT"

echo "✅ 发布完成：$APP_ROOT/current -> $REL/out"
'



ssh -L 18080:127.0.0.1:80 -L 18443:127.0.0.1:443 zjlab@10.101.88.143
